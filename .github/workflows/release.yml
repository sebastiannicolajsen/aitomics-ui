name: Release

on:
  push:
    tags:
      - 'v*'

# Add explicit permissions
permissions:
  contents: write  # Required for creating releases and uploading artifacts
  packages: write  # Required for publishing packages
  discussions: write  # Required for creating release discussions

# Add job timeout
jobs:
  build-common:
    runs-on: macos-latest  # Use macOS for the common build as it can handle both platforms
    timeout-minutes: 30
    env:
      ACTIONS_RUNNER_DEBUG: true
      ACTIONS_STEP_DEBUG: true
      NPM_CONFIG_FETCH_TIMEOUT: 300000
      NPM_CONFIG_FETCH_RETRIES: 5
      NPM_CONFIG_FETCH_RETRY_FACTOR: 2
      NPM_CONFIG_FETCH_RETRY_MINTIMEOUT: 10000
      NPM_CONFIG_FETCH_RETRY_MAXTIMEOUT: 60000

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4
        timeout-minutes: 5

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: ''
        timeout-minutes: 5

      - name: Cache npm
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-cache-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-cache-

      - name: Cache root node_modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-root-modules-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-root-modules-

      - name: Cache renderer node_modules
        uses: actions/cache@v4
        with:
          path: src/renderer/node_modules
          key: ${{ runner.os }}-renderer-modules-${{ hashFiles('src/renderer/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-renderer-modules-

      - name: Install root dependencies
        if: steps.root-cache.outputs.cache-hit != 'true'
        run: |
          echo "Installing root dependencies..."
          npm install --no-audit --no-fund
        env:
          NODE_OPTIONS: "--max-old-space-size=4096"

      - name: Install renderer dependencies
        if: steps.renderer-cache.outputs.cache-hit != 'true'
        run: |
          cd src/renderer
          npm install --no-audit --no-fund --no-progress
          cd ../..
        env:
          NODE_OPTIONS: "--max-old-space-size=4096"

      - name: Install electron
        run: |
          echo "Installing electron..."
          npm install electron@28.1.0 --save-exact
        env:
          NODE_OPTIONS: "--max-old-space-size=4096"

      - name: Prepare flow dependencies
        run: npm run prepare-flow-deps
        env:
          NODE_OPTIONS: "--max-old-space-size=4096"

      - name: Build renderer
        run: |
          cd src/renderer
          npm run build
          cd ../..
        env:
          NODE_OPTIONS: "--max-old-space-size=4096"
          CI: false
          GENERATE_SOURCEMAP: false

      - name: Build preload script
        run: npm run build-preload

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            src/renderer/build
            src/renderer/src/preload.js
            build/flow-dependencies
            node_modules
            package.json
            package-lock.json

  package-macos:
    needs: build-common
    runs-on: macos-latest
    timeout-minutes: 30
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: macos-workspace

      - name: Setup workspace
        run: |
          cd macos-workspace
          mkdir -p build dist

      - name: Install electron-builder
        run: cd macos-workspace && npm install -g electron-builder@26.0.12

      - name: Create temporary package.json
        run: |
          cd macos-workspace
          cp package.json package.json.bak
          jq '.scripts.build = "echo Skipping build as it was already done in build-common"' package.json > package.json.tmp
          mv package.json.tmp package.json

      - name: Build/Release Electron app
        uses: samuelmeuli/action-electron-builder@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          release: ${{ startsWith(github.ref, 'refs/tags/v') }}
          args: --mac --publish always --dir
          working-directory: macos-workspace
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_ENV: production
          ELECTRON_BUILDER_ALLOW_UNRESOLVED_DEPENDENCIES: true
          ELECTRON_VERSION: "28.1.0"

      - name: Restore package.json
        if: always()
        run: cd macos-workspace && mv package.json.bak package.json

  package-windows:
    needs: build-common
    runs-on: windows-latest
    timeout-minutes: 30
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: windows-workspace

      - name: Setup workspace
        run: |
          cd windows-workspace
          mkdir build dist

      - name: Install electron-builder
        run: cd windows-workspace && npm install -g electron-builder@26.0.12

      - name: Create temporary package.json
        run: |
          cd windows-workspace
          copy package.json package.json.bak
          powershell -Command "(Get-Content package.json) -replace '\"build\": \".*\"', '\"build\": \"echo Skipping build as it was already done in build-common\"' | Set-Content package.json"

      - name: Build/Release Electron app
        uses: samuelmeuli/action-electron-builder@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          release: ${{ startsWith(github.ref, 'refs/tags/v') }}
          args: --win --publish always --dir
          working-directory: windows-workspace
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_ENV: production
          ELECTRON_BUILDER_ALLOW_UNRESOLVED_DEPENDENCIES: true
          ELECTRON_VERSION: "28.1.0"

      - name: Restore package.json
        if: always()
        run: cd windows-workspace && move /Y package.json.bak package.json 