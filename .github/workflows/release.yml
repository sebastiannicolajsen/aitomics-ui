name: Release

on:
  push:
    tags:
      - 'v*'

# Add explicit permissions
permissions:
  contents: write  # Required for creating releases and uploading artifacts
  packages: write  # Required for publishing packages
  discussions: write  # Required for creating release discussions

jobs:
  release:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macos-latest, windows-latest]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: |
            **/package-lock.json
            **/package.json

      - name: Cache node_modules
        uses: actions/cache@v3
        with:
          path: |
            **/node_modules
            node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-modules-

      - name: Install dependencies
        run: |
          echo "Step 1/4: Installing root dependencies..."
          npm install --prefer-offline --no-audit --no-fund || {
            echo "Root dependencies installation failed!"
            exit 1
          }
          
          echo "Step 2/4: Installing renderer dependencies..."
          cd src/renderer
          rm -rf node_modules package-lock.json
          npm install --prefer-offline --no-audit --no-fund || {
            echo "Renderer dependencies installation failed!"
            exit 1
          }
          cd ../..
          
          echo "Step 3/4: Installing electron-builder..."
          npm install electron-builder@26.0.12 --save-dev --prefer-offline --no-audit --no-fund || {
            echo "Electron-builder installation failed!"
            exit 1
          }
          
          echo "Step 4/4: Verifying installations..."
          if [ ! -d "node_modules" ] || [ ! -d "src/renderer/node_modules" ]; then
            echo "Installation verification failed! Required node_modules directories not found."
            exit 1
          fi
          echo "All dependencies installed successfully!"
        timeout-minutes: 15
        env:
          NODE_OPTIONS: "--max-old-space-size=4096"

      - name: Build renderer
        run: |
          cd src/renderer
          export NODE_OPTIONS="--max-old-space-size=4096"
          export CI=false
          export GENERATE_SOURCEMAP=false
          export DISABLE_ESLINT_PLUGIN=true
          export NODE_ENV=production
          export GITHUB_ACTIONS=true
          export TSC_COMPILE_ON_ERROR=true
          echo "Starting renderer build..."
          echo "Step 1/4: Cleaning build directory..."
          rm -rf build
          echo "Step 2/4: Starting build process..."
          # Run build with timeout and keep-alive
          timeout 1800 bash -c '
            while true; do
              echo "Build in progress... $(date)"
              sleep 30
            done
          ' & KEEP_ALIVE_PID=$!
          
          npm run build || {
            kill $KEEP_ALIVE_PID
            echo "Build failed!"
            exit 1
          }
          
          kill $KEEP_ALIVE_PID
          
          echo "Step 3/4: Verifying build output..."
          if [ ! -d "build" ]; then
            echo "Build directory not found!"
            exit 1
          fi
          echo "Step 4/4: Build completed successfully"
          cd ../..
        timeout-minutes: 30
        env:
          NODE_ENV: production
          GITHUB_ACTIONS: true

      - name: Build preload script
        run: |
          cd src/renderer
          cd ../..
          npm run build-preload

      - name: Build/Release Electron app
        uses: samuelmeuli/action-electron-builder@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          release: ${{ startsWith(github.ref, 'refs/tags/v') }}
          artifact_name: Aitomics-UI-${{ matrix.os }}-${{ github.ref_name }}
          args: --mac --win --publish always
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_ENV: production
          ELECTRON_BUILDER_ALLOW_UNRESOLVED_DEPENDENCIES: true
          DEBUG: electron-builder 