name: Release

on:
  push:
    tags:
      - 'v*'

# Add explicit permissions
permissions:
  contents: write  # Required for creating releases and uploading artifacts
  packages: write  # Required for publishing packages
  discussions: write  # Required for creating release discussions

# Add job timeout
jobs:
  release:
    runs-on: ${{ matrix.os }}
    # Add timeout-minutes at the job level
    timeout-minutes: 30
    # Add runner timeout
    env:
      ACTIONS_RUNNER_DEBUG: true
      ACTIONS_STEP_DEBUG: true
      GITHUB_ACTIONS_RUNNER_EXTRA_USER_AGENT: "electron-builder-action"
      # Increase npm timeout
      NPM_CONFIG_FETCH_TIMEOUT: 300000
      NPM_CONFIG_FETCH_RETRIES: 5
      NPM_CONFIG_FETCH_RETRY_FACTOR: 2
      NPM_CONFIG_FETCH_RETRY_MINTIMEOUT: 10000
      NPM_CONFIG_FETCH_RETRY_MAXTIMEOUT: 60000

    strategy:
      matrix:
        os: [macos-latest, windows-latest]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3
        timeout-minutes: 5

      - name: Setup Node.js
        uses: actions/setup-node@v4
        timeout-minutes: 5
        with:
          node-version: '20'
          # Remove the built-in npm cache as we're using our own
          cache: ''

      - name: Debug environment
        run: |
          echo "Runner environment:"
          echo "Runner OS: $RUNNER_OS"
          echo "Runner temp: $RUNNER_TEMP"
          echo "Runner tool cache: $RUNNER_TOOL_CACHE"
          echo "GitHub workspace: $GITHUB_WORKSPACE"
          echo "GitHub action path: $GITHUB_ACTION_PATH"
          echo "GitHub event name: $GITHUB_EVENT_NAME"
          echo "GitHub event path: $GITHUB_EVENT_PATH"
          echo "GitHub workflow: $GITHUB_WORKFLOW"
          echo "GitHub job: $GITHUB_JOB"
          echo "GitHub run id: $GITHUB_RUN_ID"
          echo "GitHub run number: $GITHUB_RUN_NUMBER"
          echo "GitHub run attempt: $GITHUB_RUN_ATTEMPT"
          echo "GitHub actor: $GITHUB_ACTOR"
          echo "GitHub repository: $GITHUB_REPOSITORY"
          echo "GitHub ref: $GITHUB_REF"
          echo "GitHub ref name: $GITHUB_REF_NAME"
          echo "GitHub ref type: $GITHUB_REF_TYPE"
          echo "GitHub head ref: $GITHUB_HEAD_REF"
          echo "GitHub base ref: $GITHUB_BASE_REF"
          echo "GitHub server url: $GITHUB_SERVER_URL"
          echo "GitHub api url: $GITHUB_API_URL"
          echo "GitHub graphql url: $GITHUB_GRAPHQL_URL"
          echo "GitHub workspace: $GITHUB_WORKSPACE"
          echo "GitHub action: $GITHUB_ACTION"
          echo "GitHub action path: $GITHUB_ACTION_PATH"
          echo "GitHub action repository: $GITHUB_ACTION_REPOSITORY"
          echo "GitHub action ref: $GITHUB_ACTION_REF"
          echo "GitHub event path: $GITHUB_EVENT_PATH"
          echo "GitHub step summary: $GITHUB_STEP_SUMMARY"
          echo "GitHub state: $GITHUB_STATE"
          echo "GitHub output: $GITHUB_OUTPUT"
          echo "GitHub environment file: $GITHUB_ENV"
          echo "GitHub path: $GITHUB_PATH"
          echo "GitHub token: $GITHUB_TOKEN"
          echo "GitHub server url: $GITHUB_SERVER_URL"
          echo "GitHub api url: $GITHUB_API_URL"
          echo "GitHub graphql url: $GITHUB_GRAPHQL_URL"
          echo "GitHub workspace: $GITHUB_WORKSPACE"
          echo "GitHub action: $GITHUB_ACTION"
          echo "GitHub action path: $GITHUB_ACTION_PATH"
          echo "GitHub action repository: $GITHUB_ACTION_REPOSITORY"
          echo "GitHub action ref: $GITHUB_ACTION_REF"
          echo "GitHub event path: $GITHUB_EVENT_PATH"
          echo "GitHub step summary: $GITHUB_STEP_SUMMARY"
          echo "GitHub state: $GITHUB_STATE"
          echo "GitHub output: $GITHUB_OUTPUT"
          echo "GitHub environment file: $GITHUB_ENV"
          echo "GitHub path: $GITHUB_PATH"
          echo "GitHub token: $GITHUB_TOKEN"
          echo "Runner environment:"
          env | sort
        timeout-minutes: 2

      - name: Debug cache paths
        run: |
          echo "Current directory: $(pwd)"
          echo "Listing package files:"
          ls -la package*.json
          echo "Listing renderer package files:"
          ls -la src/renderer/package*.json
          echo "Cache key for root: ${{ runner.os }}-root-modules-${{ hashFiles('package-lock.json') }}"
          echo "Cache key for renderer: ${{ runner.os }}-renderer-modules-${{ hashFiles('src/renderer/package-lock.json') }}"
        timeout-minutes: 2

      - name: Cache root node_modules
        uses: actions/cache@v3
        timeout-minutes: 5
        id: root-cache
        continue-on-error: true
        with:
          path: |
            node_modules
            ~/.npm
          key: ${{ runner.os }}-root-modules-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-root-modules-
        env:
          ACTIONS_CACHE_DEBUG: true
          ACTIONS_RUNNER_DEBUG: true

      - name: Cache renderer node_modules
        uses: actions/cache@v3
        timeout-minutes: 5
        id: renderer-cache
        continue-on-error: true
        with:
          path: |
            src/renderer/node_modules
            ~/.npm
          key: ${{ runner.os }}-renderer-modules-${{ hashFiles('src/renderer/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-renderer-modules-
        env:
          ACTIONS_CACHE_DEBUG: true
          ACTIONS_RUNNER_DEBUG: true

      - name: Install dependencies
        run: |
          # Install root dependencies
          npm install
          
          # Install renderer dependencies
          cd src/renderer
          npm install
          cd ../..
        env:
          NODE_OPTIONS: "--max-old-space-size=4096"

      - name: Build renderer
        run: |
          cd src/renderer
          npm run build
          cd ../..
        env:
          NODE_OPTIONS: "--max-old-space-size=4096"
          CI: false
          GENERATE_SOURCEMAP: false

      - name: Build preload script
        run: npm run build-preload

      - name: Build/Release Electron app
        uses: samuelmeuli/action-electron-builder@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          release: ${{ startsWith(github.ref, 'refs/tags/v') }}
          artifact_name: Aitomics-UI-${{ matrix.os }}-${{ github.ref_name }}
          args: --mac --win --publish always
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_ENV: production
          ELECTRON_BUILDER_ALLOW_UNRESOLVED_DEPENDENCIES: true 