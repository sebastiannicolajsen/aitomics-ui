name: Build

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build:
    strategy:
      matrix:
        os: [macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    env:
      NODE_OPTIONS: "--max-old-space-size=4096"
      NPM_CONFIG_FETCH_TIMEOUT: 300000
      NPM_CONFIG_FETCH_RETRIES: 5

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm install
          cd src/renderer && npm install && cd ../..

      - name: Prepare build environment
        if: matrix.os == 'macos-latest'
        run: |
          # Ensure build directory exists and is clean
          rm -rf dist/
          mkdir -p build/
          # Ensure icon file is properly copied
          cp build/icon.icns build/icon.icns.new || true
          rm -f build/icon.icns
          mv build/icon.icns.new build/icon.icns || true
          # Set proper permissions
          chmod 644 build/icon.icns || true

      - name: Prepare build environment
        if: matrix.os == 'windows-latest'
        run: |
          # Ensure build directory exists and is clean
          if (Test-Path dist) { Remove-Item -Recurse -Force dist }
          if (-not (Test-Path build)) { New-Item -ItemType Directory -Force -Path build }
          # Ensure icon file is properly copied
          if (Test-Path build/icon.icns) {
            Copy-Item build/icon.icns build/icon.icns.new -Force
            Remove-Item build/icon.icns -Force
            Move-Item build/icon.icns.new build/icon.icns -Force
          }

      - name: Package app
        run: |
          # First run to generate effective config
          npm run dist -- --dir
          # Then run the actual build
          npm run package-app
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ELECTRON_BUILDER_ALLOW_UNRESOLVED_DEPENDENCIES: true
          ELECTRON_VERSION: "28.1.0"

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: aitomics-ui-${{ matrix.os }}
          path: dist/*

  release:
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: artifacts/**/*
          generate_release_notes: true 