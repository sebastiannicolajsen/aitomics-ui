name: Build

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build:
    strategy:
      matrix:
        os: [macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    env:
      NODE_OPTIONS: "--max-old-space-size=4096"
      NPM_CONFIG_FETCH_TIMEOUT: 300000
      NPM_CONFIG_FETCH_RETRIES: 5

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm install
          cd src/renderer && npm install && cd ../..

      # macOS specific steps
      - name: Prepare macOS build environment
        if: matrix.os == 'macos-latest'
        run: |
          # Only clean dist directory, preserve build directory
          rm -rf dist/
          # Handle icon file if it exists
          if [ -f build/icon.icns ]; then
            chmod 644 build/icon.icns
          fi

      - name: Build macOS app
        if: matrix.os == 'macos-latest'
        run: |
          cd src/renderer && npm run build && cd ../..
          npm run build-preload
          npm run prepare-flow-deps
          npm run dist
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ELECTRON_BUILDER_ALLOW_UNRESOLVED_DEPENDENCIES: true
          ELECTRON_VERSION: "28.1.0"

      # Windows specific steps (using the working version)
      - name: Package Windows app
        if: matrix.os == 'windows-latest'
        run: npm run package-app
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ELECTRON_BUILDER_ALLOW_UNRESOLVED_DEPENDENCIES: true
          ELECTRON_VERSION: "28.1.0"

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: aitomics-ui-${{ matrix.os }}
          path: dist/*

  release:
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: artifacts/**/*
          generate_release_notes: true 